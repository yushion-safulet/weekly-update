// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/iost-official/go-iost/v3/core/global (interfaces: BaseVariable)

// Package core_mock is a generated GoMock package.
package core_mock

import (
	gomock "github.com/golang/mock/gomock"
	common "github.com/iost-official/go-iost/v3/common"
	block "github.com/iost-official/go-iost/v3/core/block"
	db "github.com/iost-official/go-iost/v3/db"
	reflect "reflect"
)

// MockBaseVariable is a mock of BaseVariable interface
type MockBaseVariable struct {
	ctrl     *gomock.Controller
	recorder *MockBaseVariableMockRecorder
}

// MockBaseVariableMockRecorder is the mock recorder for MockBaseVariable
type MockBaseVariableMockRecorder struct {
	mock *MockBaseVariable
}

// NewMockBaseVariable creates a new mock instance
func NewMockBaseVariable(ctrl *gomock.Controller) *MockBaseVariable {
	mock := &MockBaseVariable{ctrl: ctrl}
	mock.recorder = &MockBaseVariableMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBaseVariable) EXPECT() *MockBaseVariableMockRecorder {
	return m.recorder
}

// BlockChain mocks base method
func (m *MockBaseVariable) BlockChain() block.Chain {
	ret := m.ctrl.Call(m, "BlockChain")
	ret0, _ := ret[0].(block.Chain)
	return ret0
}

// BlockChain indicates an expected call of BlockChain
func (mr *MockBaseVariableMockRecorder) BlockChain() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BlockChain", reflect.TypeOf((*MockBaseVariable)(nil).BlockChain))
}

// Config mocks base method
func (m *MockBaseVariable) Config() *common.Config {
	ret := m.ctrl.Call(m, "Config")
	ret0, _ := ret[0].(*common.Config)
	return ret0
}

// Config indicates an expected call of Config
func (mr *MockBaseVariableMockRecorder) Config() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Config", reflect.TypeOf((*MockBaseVariable)(nil).Config))
}

// StateDB mocks base method
func (m *MockBaseVariable) StateDB() db.MVCCDB {
	ret := m.ctrl.Call(m, "StateDB")
	ret0, _ := ret[0].(db.MVCCDB)
	return ret0
}

// StateDB indicates an expected call of StateDB
func (mr *MockBaseVariableMockRecorder) StateDB() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StateDB", reflect.TypeOf((*MockBaseVariable)(nil).StateDB))
}
